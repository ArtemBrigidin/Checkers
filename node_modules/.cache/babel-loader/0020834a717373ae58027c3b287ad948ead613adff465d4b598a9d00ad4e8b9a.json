{"ast":null,"code":"function closestPolyfill(el, selector) {\n  while (el) {\n    if (el.matches(selector)) return el;\n    el = el.parentElement;\n  }\n  return null;\n}\nif (!Element.prototype.closest) {\n  Element.prototype.closest = function (selector) {\n    let el = this;\n    while (el) {\n      if (el.matches(selector)) return el;\n      el = el.parentElement;\n    }\n    return null;\n  };\n}\ndocument.addEventListener('click', event => {\n  const board = event.target.closest('.Board');\n  if (board) {\n    const element = closestPolyfill(event.target, 'div');\n    if (element) {\n      const computedStyle = window.getComputedStyle(element);\n      const gridArea = computedStyle.gridArea;\n      const rowStart = computedStyle.gridRowStart;\n      const columnStart = computedStyle.gridColumnStart;\n      if (gridArea !== 'none') {\n        console.log(`Grid Area: ${gridArea}`);\n      }\n      if (rowStart !== 'auto' && columnStart !== 'auto') {\n        console.log(`Row: ${rowStart}, Column: ${columnStart}`);\n      }\n    }\n  }\n});\nlet selectedChecker = null; // Для хранения выбранной шашки\n\ndocument.addEventListener('click', event => {\n  const board = event.target.closest('.Board');\n  if (board) {\n    //const cell = event.target.closest('.cell');\n    const checker = event.target.closest('.checker');\n    if (checker) {\n      // Выделение шашки\n      if (selectedChecker) selectedChecker.classList.remove('selected');\n      selectedChecker = checker;\n      selectedChecker.classList.add('selected');\n    } else if (cell && selectedChecker) {\n      // Перемещение шашки в выбранную клетку\n      if (!cell.querySelector('.checker')) {\n        cell.appendChild(selectedChecker);\n        selectedChecker.classList.remove('selected');\n        selectedChecker = null;\n      }\n    }\n  }\n});","map":{"version":3,"names":["closestPolyfill","el","selector","matches","parentElement","Element","prototype","closest","document","addEventListener","event","board","target","element","computedStyle","window","getComputedStyle","gridArea","rowStart","gridRowStart","columnStart","gridColumnStart","console","log","selectedChecker","checker","classList","remove","add","cell","querySelector","appendChild"],"sources":["C:/Users/79650/Desktop/lolkekshahmati/src/DOM/Checkers/Game/Board/CheckerMove.js"],"sourcesContent":["function closestPolyfill(el, selector) {\r\n    while (el) {\r\n        if (el.matches(selector)) return el;\r\n        el = el.parentElement;\r\n    }\r\n    return null;\r\n}\r\n\r\nif (!Element.prototype.closest) {\r\n    Element.prototype.closest = function(selector) {\r\n        let el = this;\r\n        while (el) {\r\n            if (el.matches(selector)) return el;\r\n            el = el.parentElement;\r\n        }\r\n        return null;\r\n    };\r\n}\r\n\r\ndocument.addEventListener('click', (event) => {\r\n    const board = event.target.closest('.Board');\r\n    if (board) {\r\n        const element = closestPolyfill(event.target, 'div');\r\n        if (element) {\r\n            const computedStyle = window.getComputedStyle(element);\r\n            const gridArea = computedStyle.gridArea;\r\n            const rowStart = computedStyle.gridRowStart;\r\n            const columnStart = computedStyle.gridColumnStart;\r\n\r\n            if (gridArea !== 'none') {\r\n                console.log(`Grid Area: ${gridArea}`);\r\n            }\r\n            if (rowStart !== 'auto' && columnStart !== 'auto') {\r\n                console.log(`Row: ${rowStart}, Column: ${columnStart}`);\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nlet selectedChecker = null; // Для хранения выбранной шашки\r\n\r\ndocument.addEventListener('click', (event) => {\r\n    const board = event.target.closest('.Board');\r\n    if (board) {\r\n        //const cell = event.target.closest('.cell');\r\n        const checker = event.target.closest('.checker');\r\n\r\n        if (checker) {\r\n            // Выделение шашки\r\n            if (selectedChecker) selectedChecker.classList.remove('selected');\r\n            selectedChecker = checker;\r\n            selectedChecker.classList.add('selected');\r\n        } else if (cell && selectedChecker) {\r\n            // Перемещение шашки в выбранную клетку\r\n            if (!cell.querySelector('.checker')) {\r\n                cell.appendChild(selectedChecker);\r\n                selectedChecker.classList.remove('selected');\r\n                selectedChecker = null;\r\n            }\r\n        }\r\n    }\r\n});\r\n"],"mappings":"AAAA,SAASA,eAAeA,CAACC,EAAE,EAAEC,QAAQ,EAAE;EACnC,OAAOD,EAAE,EAAE;IACP,IAAIA,EAAE,CAACE,OAAO,CAACD,QAAQ,CAAC,EAAE,OAAOD,EAAE;IACnCA,EAAE,GAAGA,EAAE,CAACG,aAAa;EACzB;EACA,OAAO,IAAI;AACf;AAEA,IAAI,CAACC,OAAO,CAACC,SAAS,CAACC,OAAO,EAAE;EAC5BF,OAAO,CAACC,SAAS,CAACC,OAAO,GAAG,UAASL,QAAQ,EAAE;IAC3C,IAAID,EAAE,GAAG,IAAI;IACb,OAAOA,EAAE,EAAE;MACP,IAAIA,EAAE,CAACE,OAAO,CAACD,QAAQ,CAAC,EAAE,OAAOD,EAAE;MACnCA,EAAE,GAAGA,EAAE,CAACG,aAAa;IACzB;IACA,OAAO,IAAI;EACf,CAAC;AACL;AAEAI,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAGC,KAAK,IAAK;EAC1C,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACL,OAAO,CAAC,QAAQ,CAAC;EAC5C,IAAII,KAAK,EAAE;IACP,MAAME,OAAO,GAAGb,eAAe,CAACU,KAAK,CAACE,MAAM,EAAE,KAAK,CAAC;IACpD,IAAIC,OAAO,EAAE;MACT,MAAMC,aAAa,GAAGC,MAAM,CAACC,gBAAgB,CAACH,OAAO,CAAC;MACtD,MAAMI,QAAQ,GAAGH,aAAa,CAACG,QAAQ;MACvC,MAAMC,QAAQ,GAAGJ,aAAa,CAACK,YAAY;MAC3C,MAAMC,WAAW,GAAGN,aAAa,CAACO,eAAe;MAEjD,IAAIJ,QAAQ,KAAK,MAAM,EAAE;QACrBK,OAAO,CAACC,GAAG,CAAC,cAAcN,QAAQ,EAAE,CAAC;MACzC;MACA,IAAIC,QAAQ,KAAK,MAAM,IAAIE,WAAW,KAAK,MAAM,EAAE;QAC/CE,OAAO,CAACC,GAAG,CAAC,QAAQL,QAAQ,aAAaE,WAAW,EAAE,CAAC;MAC3D;IACJ;EACJ;AACJ,CAAC,CAAC;AAEF,IAAII,eAAe,GAAG,IAAI,CAAC,CAAC;;AAE5BhB,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAGC,KAAK,IAAK;EAC1C,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACL,OAAO,CAAC,QAAQ,CAAC;EAC5C,IAAII,KAAK,EAAE;IACP;IACA,MAAMc,OAAO,GAAGf,KAAK,CAACE,MAAM,CAACL,OAAO,CAAC,UAAU,CAAC;IAEhD,IAAIkB,OAAO,EAAE;MACT;MACA,IAAID,eAAe,EAAEA,eAAe,CAACE,SAAS,CAACC,MAAM,CAAC,UAAU,CAAC;MACjEH,eAAe,GAAGC,OAAO;MACzBD,eAAe,CAACE,SAAS,CAACE,GAAG,CAAC,UAAU,CAAC;IAC7C,CAAC,MAAM,IAAIC,IAAI,IAAIL,eAAe,EAAE;MAChC;MACA,IAAI,CAACK,IAAI,CAACC,aAAa,CAAC,UAAU,CAAC,EAAE;QACjCD,IAAI,CAACE,WAAW,CAACP,eAAe,CAAC;QACjCA,eAAe,CAACE,SAAS,CAACC,MAAM,CAAC,UAAU,CAAC;QAC5CH,eAAe,GAAG,IAAI;MAC1B;IACJ;EACJ;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}