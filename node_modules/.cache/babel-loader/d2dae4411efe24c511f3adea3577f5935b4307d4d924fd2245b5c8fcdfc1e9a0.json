{"ast":null,"code":"$(document).ready(function () {\n  let selectedChecker = null;\n\n  // Обработчик клика по шашке\n  $(\".checker\").on(\"click\", function () {\n    if (selectedChecker === this) {\n      selectedChecker = null;\n      $(this).removeClass(\"selected\");\n    } else {\n      if (selectedChecker) {\n        $(selectedChecker).removeClass(\"selected\");\n      }\n      selectedChecker = this;\n      $(this).addClass(\"selected\");\n    }\n  });\n\n  // Обработчик клика по клетке\n  $(\".Cell\").on(\"click\", function () {\n    if (selectedChecker) {\n      const selectedCell = $(this);\n      const checkerCell = $(selectedChecker).parent(); // Родительская клетка выбранной шашки\n\n      // Координаты текущей клетки шашки\n      const checkerRow = parseInt(checkerCell.data(\"row\"));\n      const checkerCol = parseInt(checkerCell.data(\"col\"));\n\n      // Координаты выбранной клетки\n      const selectedRow = parseInt(selectedCell.data(\"row\"));\n      const selectedCol = parseInt(selectedCell.data(\"col\"));\n\n      // Вычисляем разницу между строками и столбцами\n      const rowDiff = Math.abs(selectedRow - checkerRow);\n      const colDiff = Math.abs(selectedCol - checkerCol);\n\n      // Проверка перепрыгивания\n      if (rowDiff === 2 && colDiff === 2) {\n        // Найти промежуточную клетку\n        const middleRow = (selectedRow + checkerRow) / 2;\n        const middleCol = (selectedCol + checkerCol) / 2;\n        const middleCell = $(`.Cell[data-row=${middleRow}][data-col=${middleCol}]`);\n        const middleChecker = middleCell.find(\".checker\");\n        if (middleChecker.length) {\n          const currentCheckerColor = $(selectedChecker).hasClass(\"black\") ? \"black\" : \"white\";\n          const middleCheckerColor = middleChecker.hasClass(\"black\") ? \"black\" : \"white\";\n          if (currentCheckerColor !== middleCheckerColor) {\n            // Уничтожить шашку\n            middleChecker.remove();\n\n            // Переместить выбранную шашку\n            selectedCell.append(selectedChecker);\n\n            // Снять выделение\n            $(selectedChecker).removeClass(\"selected\");\n            selectedChecker = null;\n          }\n        }\n      }\n      // Простое перемещение (если нет перепрыгивания)\n      else if (rowDiff === 1 && colDiff === 1) {\n        selectedCell.append(selectedChecker);\n\n        // Снять выделение\n        $(selectedChecker).removeClass(\"selected\");\n        selectedChecker = null;\n      }\n    }\n  });\n});","map":{"version":3,"names":["$","document","ready","selectedChecker","on","removeClass","addClass","selectedCell","checkerCell","parent","checkerRow","parseInt","data","checkerCol","selectedRow","selectedCol","rowDiff","Math","abs","colDiff","middleRow","middleCol","middleCell","middleChecker","find","length","currentCheckerColor","hasClass","middleCheckerColor","remove","append"],"sources":["C:/Users/79650/Desktop/lolkekshahmati/src/DOM/Checkers/Game/Board/CheckerMove.js"],"sourcesContent":["$(document).ready(function () {\r\n    let selectedChecker = null;\r\n\r\n    // Обработчик клика по шашке\r\n    $(\".checker\").on(\"click\", function () {\r\n        if (selectedChecker === this) {\r\n            selectedChecker = null;\r\n            $(this).removeClass(\"selected\");\r\n        } else {\r\n            if (selectedChecker) {\r\n                $(selectedChecker).removeClass(\"selected\");\r\n            }\r\n            selectedChecker = this;\r\n            $(this).addClass(\"selected\");\r\n        }\r\n    });\r\n\r\n    // Обработчик клика по клетке\r\n    $(\".Cell\").on(\"click\", function () {\r\n        if (selectedChecker) {\r\n            const selectedCell = $(this);\r\n            const checkerCell = $(selectedChecker).parent(); // Родительская клетка выбранной шашки\r\n\r\n            // Координаты текущей клетки шашки\r\n            const checkerRow = parseInt(checkerCell.data(\"row\"));\r\n            const checkerCol = parseInt(checkerCell.data(\"col\"));\r\n\r\n            // Координаты выбранной клетки\r\n            const selectedRow = parseInt(selectedCell.data(\"row\"));\r\n            const selectedCol = parseInt(selectedCell.data(\"col\"));\r\n\r\n            // Вычисляем разницу между строками и столбцами\r\n            const rowDiff = Math.abs(selectedRow - checkerRow);\r\n            const colDiff = Math.abs(selectedCol - checkerCol);\r\n\r\n            // Проверка перепрыгивания\r\n            if (rowDiff === 2 && colDiff === 2) {\r\n                // Найти промежуточную клетку\r\n                const middleRow = (selectedRow + checkerRow) / 2;\r\n                const middleCol = (selectedCol + checkerCol) / 2;\r\n\r\n                const middleCell = $(`.Cell[data-row=${middleRow}][data-col=${middleCol}]`);\r\n                const middleChecker = middleCell.find(\".checker\");\r\n\r\n                if (middleChecker.length) {\r\n                    const currentCheckerColor = $(selectedChecker).hasClass(\"black\") ? \"black\" : \"white\";\r\n                    const middleCheckerColor = middleChecker.hasClass(\"black\") ? \"black\" : \"white\";\r\n\r\n                    if (currentCheckerColor !== middleCheckerColor) {\r\n                        // Уничтожить шашку\r\n                        middleChecker.remove();\r\n\r\n                        // Переместить выбранную шашку\r\n                        selectedCell.append(selectedChecker);\r\n\r\n                        // Снять выделение\r\n                        $(selectedChecker).removeClass(\"selected\");\r\n                        selectedChecker = null;\r\n                    }\r\n                }\r\n            }\r\n            // Простое перемещение (если нет перепрыгивания)\r\n            else if (rowDiff === 1 && colDiff === 1) {\r\n                selectedCell.append(selectedChecker);\r\n\r\n                // Снять выделение\r\n                $(selectedChecker).removeClass(\"selected\");\r\n                selectedChecker = null;\r\n            }\r\n        }\r\n    });\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}