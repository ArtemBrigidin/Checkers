{"ast":null,"code":"let selectedChecker = null; // Выбранная шашка\n\ndocument.addEventListener(\"click\", event => {\n  const cell = event.target.closest(\".Board\");\n  const checker = event.target.closest(\".checker\");\n  if (checker) {\n    // Выделяем шашку\n    if (selectedChecker) selectedChecker.classList.remove(\"selected\");\n    selectedChecker = checker;\n    selectedChecker.classList.add(\"selected\");\n  } else if (cell && selectedChecker) {\n    const currentCell = selectedChecker.closest(\".Cell\");\n    const targetCell = cell;\n\n    // Проверяем, можно ли переместить шашку\n    if (isMoveValid(currentCell, targetCell, selectedChecker)) {\n      // Если прыжок через шашку — удаляем её\n      const jumpedCell = getJumpedCell(currentCell, targetCell);\n      if (jumpedCell) {\n        const jumpedChecker = jumpedCell.querySelector(\".checker\");\n        if (jumpedChecker) jumpedChecker.remove();\n      }\n\n      // Перемещаем шашку\n      targetCell.appendChild(selectedChecker);\n      selectedChecker.classList.remove(\"selected\");\n      selectedChecker = null;\n    }\n  }\n});\nfunction isMoveValid(currentCell, targetCell, checker) {\n  if (!currentCell || !targetCell) {\n    console.error(\"currentCell or targetCell is null\");\n    return false; // Если ячейка не существует, возвращаем false\n  }\n  const currentGridArea = window.getComputedStyle(currentCell).gridArea;\n  const targetGridArea = window.getComputedStyle(targetCell).gridArea;\n  const [currentRow, currentCol] = parseGridArea(currentGridArea);\n  const [targetRow, targetCol] = parseGridArea(targetGridArea);\n  const rowDiff = Math.abs(targetRow - currentRow);\n  const colDiff = Math.abs(targetCol - currentCol);\n\n  // Проверяем, что целевая клетка пуста\n  if (!targetCell.querySelector(\".checker\")) {\n    // Проверяем обычный ход\n    if (rowDiff === 1 && colDiff === 1) return true;\n\n    // Проверяем прыжок через шашку\n    if (rowDiff === 2 && colDiff === 2) {\n      const jumpedCell = getJumpedCell(currentCell, targetCell);\n      if (jumpedCell && jumpedCell.querySelector(\".checker\")) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\nfunction getJumpedCell(currentCell, targetCell) {\n  if (!currentCell || !targetCell) {\n    console.error(\"currentCell or targetCell is null\");\n    return null;\n  }\n  const currentGridArea = window.getComputedStyle(currentCell).gridArea;\n  const targetGridArea = window.getComputedStyle(targetCell).gridArea;\n  const [currentRow, currentCol] = parseGridArea(currentGridArea);\n  const [targetRow, targetCol] = parseGridArea(targetGridArea);\n\n  // Вычисляем промежуточные координаты\n  const jumpedRow = (currentRow + targetRow) / 2;\n  const jumpedCol = (currentCol + targetCol) / 2;\n\n  // Находим промежуточную ячейку с помощью grid-area\n  return findCellByGridArea(jumpedRow, jumpedCol);\n}\nfunction parseGridArea(gridArea) {\n  const parts = gridArea.split(\" / \").map(part => parseInt(part.trim(), 10));\n  return [parts[0], parts[1]]; // row-start и col-start\n}\nfunction findCellByGridArea(row, col) {\n  return Array.from(document.querySelectorAll(\".Cell\")).find(cell => {\n    const gridArea = window.getComputedStyle(cell).gridArea;\n    const [cellRow, cellCol] = parseGridArea(gridArea);\n    return cellRow === row && cellCol === col;\n  });\n}","map":{"version":3,"names":["selectedChecker","document","addEventListener","event","cell","target","closest","checker","classList","remove","add","currentCell","targetCell","isMoveValid","jumpedCell","getJumpedCell","jumpedChecker","querySelector","appendChild","console","error","currentGridArea","window","getComputedStyle","gridArea","targetGridArea","currentRow","currentCol","parseGridArea","targetRow","targetCol","rowDiff","Math","abs","colDiff","jumpedRow","jumpedCol","findCellByGridArea","parts","split","map","part","parseInt","trim","row","col","Array","from","querySelectorAll","find","cellRow","cellCol"],"sources":["C:/Users/79650/Desktop/lolkekshahmati/src/DOM/Checkers/Game/Board/CheckerMove.js"],"sourcesContent":["let selectedChecker = null; // Выбранная шашка\r\n\r\ndocument.addEventListener(\"click\", (event) => {\r\n    const cell = event.target.closest(\".Board\");\r\n    const checker = event.target.closest(\".checker\");\r\n\r\n    if (checker) {\r\n        // Выделяем шашку\r\n        if (selectedChecker) selectedChecker.classList.remove(\"selected\");\r\n        selectedChecker = checker;\r\n        selectedChecker.classList.add(\"selected\");\r\n    } else if (cell && selectedChecker) {\r\n        const currentCell = selectedChecker.closest(\".Cell\");\r\n        const targetCell = cell;\r\n\r\n        // Проверяем, можно ли переместить шашку\r\n        if (isMoveValid(currentCell, targetCell, selectedChecker)) {\r\n            // Если прыжок через шашку — удаляем её\r\n            const jumpedCell = getJumpedCell(currentCell, targetCell);\r\n            if (jumpedCell) {\r\n                const jumpedChecker = jumpedCell.querySelector(\".checker\");\r\n                if (jumpedChecker) jumpedChecker.remove();\r\n            }\r\n\r\n            // Перемещаем шашку\r\n            targetCell.appendChild(selectedChecker);\r\n            selectedChecker.classList.remove(\"selected\");\r\n            selectedChecker = null;\r\n        }\r\n    }\r\n});\r\n\r\nfunction isMoveValid(currentCell, targetCell, checker) {\r\n    if (!currentCell || !targetCell) {\r\n        console.error(\"currentCell or targetCell is null\");\r\n        return false; // Если ячейка не существует, возвращаем false\r\n    }\r\n\r\n    const currentGridArea = window.getComputedStyle(currentCell).gridArea;\r\n    const targetGridArea = window.getComputedStyle(targetCell).gridArea;\r\n\r\n    const [currentRow, currentCol] = parseGridArea(currentGridArea);\r\n    const [targetRow, targetCol] = parseGridArea(targetGridArea);\r\n\r\n    const rowDiff = Math.abs(targetRow - currentRow);\r\n    const colDiff = Math.abs(targetCol - currentCol);\r\n\r\n    // Проверяем, что целевая клетка пуста\r\n    if (!targetCell.querySelector(\".checker\")) {\r\n        // Проверяем обычный ход\r\n        if (rowDiff === 1 && colDiff === 1) return true;\r\n\r\n        // Проверяем прыжок через шашку\r\n        if (rowDiff === 2 && colDiff === 2) {\r\n            const jumpedCell = getJumpedCell(currentCell, targetCell);\r\n            if (jumpedCell && jumpedCell.querySelector(\".checker\")) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction getJumpedCell(currentCell, targetCell) {\r\n    if (!currentCell || !targetCell) {\r\n        console.error(\"currentCell or targetCell is null\");\r\n        return null;\r\n    }\r\n\r\n    const currentGridArea = window.getComputedStyle(currentCell).gridArea;\r\n    const targetGridArea = window.getComputedStyle(targetCell).gridArea;\r\n\r\n    const [currentRow, currentCol] = parseGridArea(currentGridArea);\r\n    const [targetRow, targetCol] = parseGridArea(targetGridArea);\r\n\r\n    // Вычисляем промежуточные координаты\r\n    const jumpedRow = (currentRow + targetRow) / 2;\r\n    const jumpedCol = (currentCol + targetCol) / 2;\r\n\r\n    // Находим промежуточную ячейку с помощью grid-area\r\n    return findCellByGridArea(jumpedRow, jumpedCol);\r\n}\r\n\r\nfunction parseGridArea(gridArea) {\r\n    const parts = gridArea.split(\" / \").map(part => parseInt(part.trim(), 10));\r\n    return [parts[0], parts[1]]; // row-start и col-start\r\n}\r\n\r\nfunction findCellByGridArea(row, col) {\r\n    return Array.from(document.querySelectorAll(\".Cell\")).find(cell => {\r\n        const gridArea = window.getComputedStyle(cell).gridArea;\r\n        const [cellRow, cellCol] = parseGridArea(gridArea);\r\n        return cellRow === row && cellCol === col;\r\n    });\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}