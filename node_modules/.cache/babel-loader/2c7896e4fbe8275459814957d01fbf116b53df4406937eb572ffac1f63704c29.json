{"ast":null,"code":"function closestPolyfill(el, selector) {\n  while (el) {\n    if (el.matches(selector)) return el;\n    el = el.parentElement;\n  }\n  return null;\n}\n\n// Добавляем обработчик клика на .Board\nconst board = document.querySelector('.Board');\nif (board) {\n  board.addEventListener('click', event => {\n    console.log('Клик на элементе:', event.target); // Логируем цель клика\n\n    // Поиск ближайшего div\n    const element = closestPolyfill(event.target, 'div');\n    if (element) {\n      console.log('Найден ближайший элемент!');\n      const computedStyle = window.getComputedStyle(element); // Получаем стили элемента\n      const gridArea = computedStyle.gridArea || 'none';\n      const rowStart = computedStyle.gridRowStart || 'auto';\n      const columnStart = computedStyle.gridColumnStart || 'auto';\n\n      // Логируем gridArea\n      if (gridArea !== 'none') {\n        console.log(`Grid Area: ${gridArea}`);\n      }\n\n      // Логируем начальные значения строк и столбцов\n      if (rowStart !== 'auto' && columnStart !== 'auto') {\n        console.log(`Row: ${rowStart}, Column: ${columnStart}`);\n      }\n    }\n  });\n}","map":{"version":3,"names":["closestPolyfill","el","selector","matches","parentElement","board","document","querySelector","addEventListener","event","console","log","target","element","computedStyle","window","getComputedStyle","gridArea","rowStart","gridRowStart","columnStart","gridColumnStart"],"sources":["C:/Users/79650/Desktop/lolkekshahmati/src/DOM/Checkers/Game/Board/CheckerMove.js"],"sourcesContent":["function closestPolyfill(el, selector) {\r\n    while (el) {\r\n        if (el.matches(selector)) return el;\r\n        el = el.parentElement;\r\n    }\r\n    return null;\r\n}\r\n\r\n// Добавляем обработчик клика на .Board\r\nconst board = document.querySelector('.Board');\r\nif (board) {\r\n    board.addEventListener('click', (event) => {\r\n        console.log('Клик на элементе:', event.target); // Логируем цель клика\r\n\r\n        // Поиск ближайшего div\r\n        const element = closestPolyfill(event.target, 'div');\r\n\r\n        if (element) {\r\n            console.log('Найден ближайший элемент!');\r\n\r\n            const computedStyle = window.getComputedStyle(element); // Получаем стили элемента\r\n            const gridArea = computedStyle.gridArea || 'none';\r\n            const rowStart = computedStyle.gridRowStart || 'auto';\r\n            const columnStart = computedStyle.gridColumnStart || 'auto';\r\n\r\n            // Логируем gridArea\r\n            if (gridArea !== 'none') {\r\n                console.log(`Grid Area: ${gridArea}`);\r\n            }\r\n\r\n            // Логируем начальные значения строк и столбцов\r\n            if (rowStart !== 'auto' && columnStart !== 'auto') {\r\n                console.log(`Row: ${rowStart}, Column: ${columnStart}`);\r\n            }\r\n        }\r\n    });\r\n}\r\n"],"mappings":"AAAA,SAASA,eAAeA,CAACC,EAAE,EAAEC,QAAQ,EAAE;EACnC,OAAOD,EAAE,EAAE;IACP,IAAIA,EAAE,CAACE,OAAO,CAACD,QAAQ,CAAC,EAAE,OAAOD,EAAE;IACnCA,EAAE,GAAGA,EAAE,CAACG,aAAa;EACzB;EACA,OAAO,IAAI;AACf;;AAEA;AACA,MAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;AAC9C,IAAIF,KAAK,EAAE;EACPA,KAAK,CAACG,gBAAgB,CAAC,OAAO,EAAGC,KAAK,IAAK;IACvCC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,KAAK,CAACG,MAAM,CAAC,CAAC,CAAC;;IAEhD;IACA,MAAMC,OAAO,GAAGb,eAAe,CAACS,KAAK,CAACG,MAAM,EAAE,KAAK,CAAC;IAEpD,IAAIC,OAAO,EAAE;MACTH,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MAExC,MAAMG,aAAa,GAAGC,MAAM,CAACC,gBAAgB,CAACH,OAAO,CAAC,CAAC,CAAC;MACxD,MAAMI,QAAQ,GAAGH,aAAa,CAACG,QAAQ,IAAI,MAAM;MACjD,MAAMC,QAAQ,GAAGJ,aAAa,CAACK,YAAY,IAAI,MAAM;MACrD,MAAMC,WAAW,GAAGN,aAAa,CAACO,eAAe,IAAI,MAAM;;MAE3D;MACA,IAAIJ,QAAQ,KAAK,MAAM,EAAE;QACrBP,OAAO,CAACC,GAAG,CAAC,cAAcM,QAAQ,EAAE,CAAC;MACzC;;MAEA;MACA,IAAIC,QAAQ,KAAK,MAAM,IAAIE,WAAW,KAAK,MAAM,EAAE;QAC/CV,OAAO,CAACC,GAAG,CAAC,QAAQO,QAAQ,aAAaE,WAAW,EAAE,CAAC;MAC3D;IACJ;EACJ,CAAC,CAAC;AACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}