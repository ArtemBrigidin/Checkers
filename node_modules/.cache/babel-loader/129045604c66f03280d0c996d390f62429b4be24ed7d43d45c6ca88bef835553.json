{"ast":null,"code":"let selectedChecker = null; // Выбранная шашка\n\ndocument.addEventListener(\"click\", event => {\n  const cell = event.target.closest(\".Cell\");\n  const checker = event.target.closest(\".checker\");\n  if (checker) {\n    // Выделяем шашку\n    if (selectedChecker) selectedChecker.classList.remove(\"selected\");\n    selectedChecker = checker;\n    selectedChecker.classList.add(\"selected\");\n  } else if (cell && selectedChecker) {\n    const currentCell = selectedChecker.parentElement; // Ячейка с шашкой\n    const targetCell = cell; // Целевая ячейка\n\n    // Проверяем, можно ли переместить шашку\n    if (isMoveValid(currentCell, targetCell)) {\n      // Если прыжок через шашку — удаляем её\n      const jumpedCell = getJumpedCell(currentCell, targetCell);\n      if (jumpedCell) {\n        const jumpedChecker = jumpedCell.querySelector(\".checker\");\n        if (jumpedChecker) jumpedChecker.remove();\n      }\n\n      // Перемещаем шашку\n      targetCell.appendChild(selectedChecker);\n      selectedChecker.classList.remove(\"selected\");\n      selectedChecker = null;\n    }\n  }\n});\nfunction isMoveValid(currentCell, targetCell) {\n  const currentGridArea = window.getComputedStyle(currentCell).gridArea;\n  const targetGridArea = window.getComputedStyle(targetCell).gridArea;\n  const [currentRow, currentCol] = parseGridArea(currentGridArea);\n  const [targetRow, targetCol] = parseGridArea(targetGridArea);\n  const rowDiff = Math.abs(targetRow - currentRow);\n  const colDiff = Math.abs(targetCol - currentCol);\n  console.log(`Row Difference: ${rowDiff}, Column Difference: ${colDiff}`);\n\n  // Проверяем обычный ход\n  if (rowDiff === 1 && colDiff === 1) return true;\n\n  // Проверяем прыжок через шашку\n  if (rowDiff === 2 && colDiff === 2) {\n    const jumpedCell = getJumpedCell(currentCell, targetCell);\n    if (jumpedCell && jumpedCell.querySelector(\".checker\")) {\n      console.log(\"Valid jump detected.\");\n      return true;\n    }\n  }\n  return false;\n}\nfunction getJumpedCell(currentCell, targetCell) {\n  console.log(\"Calculating jumped cell...\");\n  const currentGridArea = window.getComputedStyle(currentCell).gridArea;\n  const targetGridArea = window.getComputedStyle(targetCell).gridArea;\n  const [currentRow, currentCol] = parseGridArea(currentGridArea);\n  const [targetRow, targetCol] = parseGridArea(targetGridArea);\n\n  // Вычисляем промежуточные координаты\n  const jumpedRow = (currentRow + targetRow) / 2;\n  const jumpedCol = (currentCol + targetCol) / 2;\n  console.log(`Jumped Row: ${jumpedRow}, Jumped Col: ${jumpedCol}`);\n\n  // Находим промежуточную ячейку\n  return findCellByGridArea(jumpedRow, jumpedCol);\n}\nfunction parseGridArea(gridArea) {\n  if (!gridArea || typeof gridArea !== \"string\") {\n    console.error(\"Invalid grid-area value:\", gridArea);\n    return [NaN, NaN];\n  }\n  const parts = gridArea.split(\" / \").map(part => parseInt(part.trim(), 10));\n  return [parts[0], parts[1]]; // row-start и col-start\n}\nfunction findCellByGridArea(row, col) {\n  return Array.from(document.querySelectorAll(\".Cell\")).find(cell => {\n    const gridArea = window.getComputedStyle(cell).gridArea;\n    const [cellRow, cellCol] = parseGridArea(gridArea);\n    return cellRow === row && cellCol === col;\n  });\n}","map":{"version":3,"names":["selectedChecker","document","addEventListener","event","cell","target","closest","checker","classList","remove","add","currentCell","parentElement","targetCell","isMoveValid","jumpedCell","getJumpedCell","jumpedChecker","querySelector","appendChild","currentGridArea","window","getComputedStyle","gridArea","targetGridArea","currentRow","currentCol","parseGridArea","targetRow","targetCol","rowDiff","Math","abs","colDiff","console","log","jumpedRow","jumpedCol","findCellByGridArea","error","NaN","parts","split","map","part","parseInt","trim","row","col","Array","from","querySelectorAll","find","cellRow","cellCol"],"sources":["C:/Users/79650/Desktop/lolkekshahmati/src/DOM/Checkers/Game/Board/CheckerMove.js"],"sourcesContent":["let selectedChecker = null; // Выбранная шашка\r\n\r\ndocument.addEventListener(\"click\", (event) => {\r\n    const cell = event.target.closest(\".Cell\");\r\n    const checker = event.target.closest(\".checker\");\r\n\r\n    if (checker) {\r\n        // Выделяем шашку\r\n        if (selectedChecker) selectedChecker.classList.remove(\"selected\");\r\n        selectedChecker = checker;\r\n        selectedChecker.classList.add(\"selected\");\r\n    } else if (cell && selectedChecker) {\r\n        const currentCell = selectedChecker.parentElement; // Ячейка с шашкой\r\n        const targetCell = cell; // Целевая ячейка\r\n\r\n        // Проверяем, можно ли переместить шашку\r\n        if (isMoveValid(currentCell, targetCell)) {\r\n            // Если прыжок через шашку — удаляем её\r\n            const jumpedCell = getJumpedCell(currentCell, targetCell);\r\n            if (jumpedCell) {\r\n                const jumpedChecker = jumpedCell.querySelector(\".checker\");\r\n                if (jumpedChecker) jumpedChecker.remove();\r\n            }\r\n\r\n            // Перемещаем шашку\r\n            targetCell.appendChild(selectedChecker);\r\n            selectedChecker.classList.remove(\"selected\");\r\n            selectedChecker = null;\r\n        }\r\n    }\r\n});\r\n\r\nfunction isMoveValid(currentCell, targetCell) {\r\n    const currentGridArea = window.getComputedStyle(currentCell).gridArea;\r\n    const targetGridArea = window.getComputedStyle(targetCell).gridArea;\r\n\r\n    const [currentRow, currentCol] = parseGridArea(currentGridArea);\r\n    const [targetRow, targetCol] = parseGridArea(targetGridArea);\r\n\r\n    const rowDiff = Math.abs(targetRow - currentRow);\r\n    const colDiff = Math.abs(targetCol - currentCol);\r\n\r\n    console.log(`Row Difference: ${rowDiff}, Column Difference: ${colDiff}`);\r\n\r\n    // Проверяем обычный ход\r\n    if (rowDiff === 1 && colDiff === 1) return true;\r\n\r\n    // Проверяем прыжок через шашку\r\n    if (rowDiff === 2 && colDiff === 2) {\r\n        const jumpedCell = getJumpedCell(currentCell, targetCell);\r\n        if (jumpedCell && jumpedCell.querySelector(\".checker\")) {\r\n            console.log(\"Valid jump detected.\");\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction getJumpedCell(currentCell, targetCell) {\r\n    console.log(\"Calculating jumped cell...\");\r\n\r\n    const currentGridArea = window.getComputedStyle(currentCell).gridArea;\r\n    const targetGridArea = window.getComputedStyle(targetCell).gridArea;\r\n\r\n    const [currentRow, currentCol] = parseGridArea(currentGridArea);\r\n    const [targetRow, targetCol] = parseGridArea(targetGridArea);\r\n\r\n    // Вычисляем промежуточные координаты\r\n    const jumpedRow = (currentRow + targetRow) / 2;\r\n    const jumpedCol = (currentCol + targetCol) / 2;\r\n\r\n    console.log(`Jumped Row: ${jumpedRow}, Jumped Col: ${jumpedCol}`);\r\n\r\n    // Находим промежуточную ячейку\r\n    return findCellByGridArea(jumpedRow, jumpedCol);\r\n}\r\n\r\nfunction parseGridArea(gridArea) {\r\n    if (!gridArea || typeof gridArea !== \"string\") {\r\n        console.error(\"Invalid grid-area value:\", gridArea);\r\n        return [NaN, NaN];\r\n    }\r\n\r\n    const parts = gridArea.split(\" / \").map(part => parseInt(part.trim(), 10));\r\n    return [parts[0], parts[1]]; // row-start и col-start\r\n}\r\n\r\nfunction findCellByGridArea(row, col) {\r\n    return Array.from(document.querySelectorAll(\".Cell\")).find(cell => {\r\n        const gridArea = window.getComputedStyle(cell).gridArea;\r\n        const [cellRow, cellCol] = parseGridArea(gridArea);\r\n        return cellRow === row && cellCol === col;\r\n    });\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}