{"ast":null,"code":"$(document).ready(function () {\n  let selectedChecker = null;\n\n  // Обработчик клика по шашке\n  $(\".checker\").on(\"click\", function () {\n    if (selectedChecker === this) {\n      selectedChecker = null;\n      $(this).removeClass(\"selected\");\n    } else {\n      if (selectedChecker) {\n        $(selectedChecker).removeClass(\"selected\");\n      }\n      selectedChecker = this;\n      $(this).addClass(\"selected\");\n    }\n  });\n\n  // Обработчик клика по клетке\n  $(\".Cell\").on(\"click\", function () {\n    if (selectedChecker) {\n      const selectedCell = $(this);\n      const selectedPosition = selectedCell.css(\"grid-area\");\n      const checkerPosition = $(selectedChecker).css(\"grid-area\");\n\n      // Получаем координаты выбранной клетки\n      const selectedCoords = selectedPosition.trim().split(\" / \").map(Number);\n      const selectedRow = selectedCoords[0];\n      const selectedCol = selectedCoords[1];\n\n      // Получаем координаты текущей клетки шашки\n      const checkerCoords = checkerPosition.trim().split(\" / \").map(Number);\n      const checkerRow = checkerCoords[0];\n      const checkerCol = checkerCoords[1];\n\n      // Вычисляем разницу координат\n      const rowDiff = Math.abs(selectedRow - checkerRow);\n      const colDiff = Math.abs(selectedCol - checkerCol);\n      console.log(`Selected position: ${selectedRow}, ${selectedCol}`);\n      console.log(`Checker position: ${checkerRow}, ${checkerCol}`);\n      console.log(`Row diff: ${rowDiff}, Col diff: ${colDiff}`);\n\n      // Проверка на перепрыгивание\n      if (rowDiff === 2 && colDiff === 2) {\n        const middleRow = (selectedRow + checkerRow) / 2;\n        const middleCol = (selectedCol + checkerCol) / 2;\n        console.log(`Middle position: ${middleRow}, ${middleCol}`);\n        const middleCell = $(\".Cell\").filter(function () {\n          return $(this).css(\"grid-area\").trim() === `${middleRow} / ${middleCol} / ${middleRow} / ${middleCol}`;\n        });\n        if (middleCell.length && middleCell.find(\".checker\").length) {\n          console.log(\"Middle cell contains checker\");\n          const middleChecker = middleCell.find(\".checker\");\n          const currentCheckerColor = $(selectedChecker).hasClass(\"black\") ? \"black\" : \"white\";\n          const middleCheckerColor = middleChecker.hasClass(\"black\") ? \"black\" : \"white\";\n          console.log(`Current color: ${currentCheckerColor}, Middle color: ${middleCheckerColor}`);\n          if (currentCheckerColor !== middleCheckerColor) {\n            console.log(\"Checker colors match for capture\");\n            middleChecker.remove();\n\n            // Перемещаем выбранную шашку\n            $(selectedChecker).css(\"grid-area\", selectedPosition);\n\n            // Снимаем выделение\n            $(selectedChecker).removeClass(\"selected\");\n            selectedChecker = null;\n          }\n        } else {\n          console.log(\"No checker to jump over\");\n        }\n      } else if (rowDiff === 1 && colDiff === 1) {\n        console.log(\"Simple move\");\n        $(selectedChecker).css(\"grid-area\", selectedPosition);\n        $(selectedChecker).removeClass(\"selected\");\n        selectedChecker = null;\n      }\n    }\n  });\n});","map":{"version":3,"names":["$","document","ready","selectedChecker","on","removeClass","addClass","selectedCell","selectedPosition","css","checkerPosition","selectedCoords","trim","split","map","Number","selectedRow","selectedCol","checkerCoords","checkerRow","checkerCol","rowDiff","Math","abs","colDiff","console","log","middleRow","middleCol","middleCell","filter","length","find","middleChecker","currentCheckerColor","hasClass","middleCheckerColor","remove"],"sources":["C:/Users/79650/Desktop/lolkekshahmati/src/DOM/Checkers/Game/Board/CheckerMove.js"],"sourcesContent":["$(document).ready(function () {\r\n    let selectedChecker = null;\r\n\r\n    // Обработчик клика по шашке\r\n    $(\".checker\").on(\"click\", function () {\r\n        if (selectedChecker === this) {\r\n            selectedChecker = null;\r\n            $(this).removeClass(\"selected\");\r\n        } else {\r\n            if (selectedChecker) {\r\n                $(selectedChecker).removeClass(\"selected\");\r\n            }\r\n            selectedChecker = this;\r\n            $(this).addClass(\"selected\");\r\n        }\r\n    });\r\n\r\n    // Обработчик клика по клетке\r\n    $(\".Cell\").on(\"click\", function () {\r\n        if (selectedChecker) {\r\n            const selectedCell = $(this);\r\n            const selectedPosition = selectedCell.css(\"grid-area\");\r\n            const checkerPosition = $(selectedChecker).css(\"grid-area\");\r\n\r\n            // Получаем координаты выбранной клетки\r\n            const selectedCoords = selectedPosition.trim().split(\" / \").map(Number);\r\n            const selectedRow = selectedCoords[0];\r\n            const selectedCol = selectedCoords[1];\r\n\r\n            // Получаем координаты текущей клетки шашки\r\n            const checkerCoords = checkerPosition.trim().split(\" / \").map(Number);\r\n            const checkerRow = checkerCoords[0];\r\n            const checkerCol = checkerCoords[1];\r\n\r\n            // Вычисляем разницу координат\r\n            const rowDiff = Math.abs(selectedRow - checkerRow);\r\n            const colDiff = Math.abs(selectedCol - checkerCol);\r\n\r\n            console.log(`Selected position: ${selectedRow}, ${selectedCol}`);\r\n            console.log(`Checker position: ${checkerRow}, ${checkerCol}`);\r\n            console.log(`Row diff: ${rowDiff}, Col diff: ${colDiff}`);\r\n\r\n            // Проверка на перепрыгивание\r\n            if (rowDiff === 2 && colDiff === 2) {\r\n                const middleRow = (selectedRow + checkerRow) / 2;\r\n                const middleCol = (selectedCol + checkerCol) / 2;\r\n\r\n                console.log(`Middle position: ${middleRow}, ${middleCol}`);\r\n\r\n                const middleCell = $(\".Cell\").filter(function () {\r\n                    return $(this)\r\n                        .css(\"grid-area\")\r\n                        .trim() === `${middleRow} / ${middleCol} / ${middleRow} / ${middleCol}`;\r\n                });\r\n\r\n                if (middleCell.length && middleCell.find(\".checker\").length) {\r\n                    console.log(\"Middle cell contains checker\");\r\n                    const middleChecker = middleCell.find(\".checker\");\r\n                    const currentCheckerColor = $(selectedChecker).hasClass(\"black\") ? \"black\" : \"white\";\r\n                    const middleCheckerColor = middleChecker.hasClass(\"black\") ? \"black\" : \"white\";\r\n\r\n                    console.log(`Current color: ${currentCheckerColor}, Middle color: ${middleCheckerColor}`);\r\n\r\n                    if (currentCheckerColor !== middleCheckerColor) {\r\n                        console.log(\"Checker colors match for capture\");\r\n                        middleChecker.remove();\r\n\r\n                        // Перемещаем выбранную шашку\r\n                        $(selectedChecker).css(\"grid-area\", selectedPosition);\r\n\r\n                        // Снимаем выделение\r\n                        $(selectedChecker).removeClass(\"selected\");\r\n                        selectedChecker = null;\r\n                    }\r\n                } else {\r\n                    console.log(\"No checker to jump over\");\r\n                }\r\n            } else if (rowDiff === 1 && colDiff === 1) {\r\n                console.log(\"Simple move\");\r\n                $(selectedChecker).css(\"grid-area\", selectedPosition);\r\n                $(selectedChecker).removeClass(\"selected\");\r\n                selectedChecker = null;\r\n            }\r\n        }\r\n    });\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}