{"ast":null,"code":"let selectedChecker = null; // Выбранная шашка\n\ndocument.addEventListener(\"click\", event => {\n  const cell = event.target.closest(\".Cell\");\n  const checker = event.target.closest(\".checker\");\n  if (checker) {\n    // Выделяем шашку\n    if (selectedChecker) selectedChecker.classList.remove(\"selected\");\n    selectedChecker = checker;\n    selectedChecker.classList.add(\"selected\");\n  } else if (cell && selectedChecker) {\n    const currentCell = selectedChecker.closest(\".Cell\");\n    const targetCell = cell;\n\n    // Проверяем, можно ли переместить шашку\n    if (isMoveValid(currentCell, targetCell, selectedChecker)) {\n      // Если прыжок через шашку — удаляем её\n      const jumpedCell = getJumpedCell(currentCell, targetCell);\n      if (jumpedCell) {\n        const jumpedChecker = jumpedCell.querySelector(\".checker\");\n        if (jumpedChecker) jumpedChecker.remove();\n      }\n\n      // Перемещаем шашку\n      targetCell.appendChild(selectedChecker);\n      selectedChecker.classList.remove(\"selected\");\n      selectedChecker = null;\n    }\n  }\n});\nfunction isMoveValid(currentCell, targetCell, checker) {\n  if (!currentCell || !targetCell) return false;\n  const currentRow = parseInt(currentCell.dataset.row);\n  const currentCol = parseInt(currentCell.dataset.col);\n  const targetRow = parseInt(targetCell.dataset.row);\n  const targetCol = parseInt(targetCell.dataset.col);\n  const rowDiff = Math.abs(targetRow - currentRow);\n  const colDiff = Math.abs(targetCol - currentCol);\n\n  // Проверяем, что целевая клетка пуста\n  if (targetCell.querySelector(\".checker\")) return false;\n\n  // Проверяем обычный ход\n  if (rowDiff === 1 && colDiff === 1) return true;\n\n  // Проверяем прыжок через шашку\n  if (rowDiff === 2 && colDiff === 2) {\n    const jumpedCell = getJumpedCell(currentCell, targetCell);\n    if (jumpedCell && jumpedCell.querySelector(\".checker\")) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction getJumpedCell(currentCell, targetCell) {\n  if (!currentCell || !targetCell) return null;\n  const currentRow = parseInt(currentCell.dataset.row);\n  const currentCol = parseInt(currentCell.dataset.col);\n  const targetRow = parseInt(targetCell.dataset.row);\n  const targetCol = parseInt(targetCell.dataset.col);\n  const jumpedRow = (currentRow + targetRow) / 2;\n  const jumpedCol = (currentCol + targetCol) / 2;\n  return document.querySelector(`.Cell[data-row=\"${jumpedRow}\"][data-col=\"${jumpedCol}\"]`);\n}\n\n// Добавление атрибутов data-row и data-col\ndocument.querySelectorAll('.Cell').forEach((cell, index) => {\n  const row = Math.floor(index / 8) + 1;\n  const col = index % 8 + 1;\n  cell.dataset.row = row;\n  cell.dataset.col = col;\n});","map":{"version":3,"names":["selectedChecker","document","addEventListener","event","cell","target","closest","checker","classList","remove","add","currentCell","targetCell","isMoveValid","jumpedCell","getJumpedCell","jumpedChecker","querySelector","appendChild","currentRow","parseInt","dataset","row","currentCol","col","targetRow","targetCol","rowDiff","Math","abs","colDiff","jumpedRow","jumpedCol","querySelectorAll","forEach","index","floor"],"sources":["C:/Users/79650/Desktop/lolkekshahmati/src/DOM/Checkers/Game/Board/CheckerMove.js"],"sourcesContent":["let selectedChecker = null; // Выбранная шашка\r\n\r\ndocument.addEventListener(\"click\", (event) => {\r\n    const cell = event.target.closest(\".Cell\");\r\n    const checker = event.target.closest(\".checker\");\r\n\r\n    if (checker) {\r\n        // Выделяем шашку\r\n        if (selectedChecker) selectedChecker.classList.remove(\"selected\");\r\n        selectedChecker = checker;\r\n        selectedChecker.classList.add(\"selected\");\r\n    } else if (cell && selectedChecker) {\r\n        const currentCell = selectedChecker.closest(\".Cell\");\r\n        const targetCell = cell;\r\n\r\n        // Проверяем, можно ли переместить шашку\r\n        if (isMoveValid(currentCell, targetCell, selectedChecker)) {\r\n            // Если прыжок через шашку — удаляем её\r\n            const jumpedCell = getJumpedCell(currentCell, targetCell);\r\n            if (jumpedCell) {\r\n                const jumpedChecker = jumpedCell.querySelector(\".checker\");\r\n                if (jumpedChecker) jumpedChecker.remove();\r\n            }\r\n\r\n            // Перемещаем шашку\r\n            targetCell.appendChild(selectedChecker);\r\n            selectedChecker.classList.remove(\"selected\");\r\n            selectedChecker = null;\r\n        }\r\n    }\r\n});\r\n\r\nfunction isMoveValid(currentCell, targetCell, checker) {\r\n    if (!currentCell || !targetCell) return false;\r\n\r\n    const currentRow = parseInt(currentCell.dataset.row);\r\n    const currentCol = parseInt(currentCell.dataset.col);\r\n    const targetRow = parseInt(targetCell.dataset.row);\r\n    const targetCol = parseInt(targetCell.dataset.col);\r\n\r\n    const rowDiff = Math.abs(targetRow - currentRow);\r\n    const colDiff = Math.abs(targetCol - currentCol);\r\n\r\n    // Проверяем, что целевая клетка пуста\r\n    if (targetCell.querySelector(\".checker\")) return false;\r\n\r\n    // Проверяем обычный ход\r\n    if (rowDiff === 1 && colDiff === 1) return true;\r\n\r\n    // Проверяем прыжок через шашку\r\n    if (rowDiff === 2 && colDiff === 2) {\r\n        const jumpedCell = getJumpedCell(currentCell, targetCell);\r\n        if (jumpedCell && jumpedCell.querySelector(\".checker\")) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction getJumpedCell(currentCell, targetCell) {\r\n    if (!currentCell || !targetCell) return null;\r\n\r\n    const currentRow = parseInt(currentCell.dataset.row);\r\n    const currentCol = parseInt(currentCell.dataset.col);\r\n    const targetRow = parseInt(targetCell.dataset.row);\r\n    const targetCol = parseInt(targetCell.dataset.col);\r\n\r\n    const jumpedRow = (currentRow + targetRow) / 2;\r\n    const jumpedCol = (currentCol + targetCol) / 2;\r\n\r\n    return document.querySelector(\r\n        `.Cell[data-row=\"${jumpedRow}\"][data-col=\"${jumpedCol}\"]`\r\n    );\r\n}\r\n\r\n// Добавление атрибутов data-row и data-col\r\ndocument.querySelectorAll('.Cell').forEach((cell, index) => {\r\n    const row = Math.floor(index / 8) + 1;\r\n    const col = (index % 8) + 1;\r\n    cell.dataset.row = row;\r\n    cell.dataset.col = col;\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}