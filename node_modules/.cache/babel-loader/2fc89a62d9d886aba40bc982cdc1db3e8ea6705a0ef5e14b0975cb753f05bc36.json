{"ast":null,"code":"$(\".Cell\").on(\"click\", function () {\n  if (selectedChecker) {\n    const selectedCell = $(this);\n    const selectedPosition = selectedCell.css(\"grid-area\");\n    const checkerPosition = $(selectedChecker).css(\"grid-area\");\n\n    // Получаем координаты выбранной клетки\n    const selectedCoords = selectedPosition.trim().split(\" / \").map(Number);\n    const selectedRow = selectedCoords[0];\n    const selectedCol = selectedCoords[1];\n\n    // Получаем координаты текущей клетки шашки\n    const checkerCoords = checkerPosition.trim().split(\" / \").map(Number);\n    const checkerRow = checkerCoords[0];\n    const checkerCol = checkerCoords[1];\n\n    // Вычисляем разницу координат\n    const rowDiff = Math.abs(selectedRow - checkerRow);\n    const colDiff = Math.abs(selectedCol - checkerCol);\n    console.log(`Selected position: ${selectedRow}, ${selectedCol}`);\n    console.log(`Checker position: ${checkerRow}, ${checkerCol}`);\n    console.log(`Row diff: ${rowDiff}, Col diff: ${colDiff}`);\n\n    // Проверка на перепрыгивание\n    if (rowDiff === 2 && colDiff === 2) {\n      const middleRow = (selectedRow + checkerRow) / 2;\n      const middleCol = (selectedCol + checkerCol) / 2;\n      console.log(`Middle position: ${middleRow}, ${middleCol}`);\n      const middleCell = $(\".Cell\").filter(function () {\n        return $(this).css(\"grid-area\").trim() === `${middleRow} / ${middleCol} / ${middleRow} / ${middleCol}`;\n      });\n      if (middleCell.length && middleCell.find(\".checker\").length) {\n        console.log(\"Middle cell contains checker\");\n        const middleChecker = middleCell.find(\".checker\");\n        const currentCheckerColor = $(selectedChecker).hasClass(\"black\") ? \"black\" : \"white\";\n        const middleCheckerColor = middleChecker.hasClass(\"black\") ? \"black\" : \"white\";\n        console.log(`Current color: ${currentCheckerColor}, Middle color: ${middleCheckerColor}`);\n        if (currentCheckerColor !== middleCheckerColor) {\n          console.log(\"Checker colors match for capture\");\n          middleChecker.remove();\n\n          // Перемещаем выбранную шашку\n          $(selectedChecker).css(\"grid-area\", selectedPosition);\n\n          // Снимаем выделение\n          $(selectedChecker).removeClass(\"selected\");\n          selectedChecker = null;\n        }\n      } else {\n        console.log(\"No checker to jump over\");\n      }\n    } else if (rowDiff === 1 && colDiff === 1) {\n      console.log(\"Simple move\");\n      $(selectedChecker).css(\"grid-area\", selectedPosition);\n      $(selectedChecker).removeClass(\"selected\");\n      selectedChecker = null;\n    }\n  }\n});","map":{"version":3,"names":["$","on","selectedChecker","selectedCell","selectedPosition","css","checkerPosition","selectedCoords","trim","split","map","Number","selectedRow","selectedCol","checkerCoords","checkerRow","checkerCol","rowDiff","Math","abs","colDiff","console","log","middleRow","middleCol","middleCell","filter","length","find","middleChecker","currentCheckerColor","hasClass","middleCheckerColor","remove","removeClass"],"sources":["C:/Users/79650/Desktop/lolkekshahmati/src/DOM/Checkers/Game/Board/CheckerMove.js"],"sourcesContent":["$(\".Cell\").on(\"click\", function () {\r\n    if (selectedChecker) {\r\n        const selectedCell = $(this);\r\n        const selectedPosition = selectedCell.css(\"grid-area\");\r\n        const checkerPosition = $(selectedChecker).css(\"grid-area\");\r\n\r\n        // Получаем координаты выбранной клетки\r\n        const selectedCoords = selectedPosition.trim().split(\" / \").map(Number);\r\n        const selectedRow = selectedCoords[0];\r\n        const selectedCol = selectedCoords[1];\r\n\r\n        // Получаем координаты текущей клетки шашки\r\n        const checkerCoords = checkerPosition.trim().split(\" / \").map(Number);\r\n        const checkerRow = checkerCoords[0];\r\n        const checkerCol = checkerCoords[1];\r\n\r\n        // Вычисляем разницу координат\r\n        const rowDiff = Math.abs(selectedRow - checkerRow);\r\n        const colDiff = Math.abs(selectedCol - checkerCol);\r\n\r\n        console.log(`Selected position: ${selectedRow}, ${selectedCol}`);\r\n        console.log(`Checker position: ${checkerRow}, ${checkerCol}`);\r\n        console.log(`Row diff: ${rowDiff}, Col diff: ${colDiff}`);\r\n\r\n        // Проверка на перепрыгивание\r\n        if (rowDiff === 2 && colDiff === 2) {\r\n            const middleRow = (selectedRow + checkerRow) / 2;\r\n            const middleCol = (selectedCol + checkerCol) / 2;\r\n\r\n            console.log(`Middle position: ${middleRow}, ${middleCol}`);\r\n\r\n            const middleCell = $(\".Cell\").filter(function () {\r\n                return $(this)\r\n                    .css(\"grid-area\")\r\n                    .trim() === `${middleRow} / ${middleCol} / ${middleRow} / ${middleCol}`;\r\n            });\r\n\r\n            if (middleCell.length && middleCell.find(\".checker\").length) {\r\n                console.log(\"Middle cell contains checker\");\r\n                const middleChecker = middleCell.find(\".checker\");\r\n                const currentCheckerColor = $(selectedChecker).hasClass(\"black\") ? \"black\" : \"white\";\r\n                const middleCheckerColor = middleChecker.hasClass(\"black\") ? \"black\" : \"white\";\r\n\r\n                console.log(`Current color: ${currentCheckerColor}, Middle color: ${middleCheckerColor}`);\r\n\r\n                if (currentCheckerColor !== middleCheckerColor) {\r\n                    console.log(\"Checker colors match for capture\");\r\n                    middleChecker.remove();\r\n\r\n                    // Перемещаем выбранную шашку\r\n                    $(selectedChecker).css(\"grid-area\", selectedPosition);\r\n\r\n                    // Снимаем выделение\r\n                    $(selectedChecker).removeClass(\"selected\");\r\n                    selectedChecker = null;\r\n                }\r\n            } else {\r\n                console.log(\"No checker to jump over\");\r\n            }\r\n        } else if (rowDiff === 1 && colDiff === 1) {\r\n            console.log(\"Simple move\");\r\n            $(selectedChecker).css(\"grid-area\", selectedPosition);\r\n            $(selectedChecker).removeClass(\"selected\");\r\n            selectedChecker = null;\r\n        }\r\n    }\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}