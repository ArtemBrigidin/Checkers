{"ast":null,"code":"// Инициализация переменных\nconst checkers = document.querySelectorAll('.checker'); // Все шашки\nlet selectedChecker = null; // Шашка, которую выбрали для перемещения\n\n// Обработчик события \"mousedown\" (когда пользователь кликает на шашку)\ncheckers.forEach(checker => {\n  checker.addEventListener('mousedown', event => {\n    selectedChecker = event.target; // Устанавливаем выбранную шашку\n    selectedChecker.classList.add('selected'); // Подсвечиваем выбранную шашку\n    selectedChecker.style.zIndex = 1000; // Увеличиваем z-index для того, чтобы шашка была поверх других\n  });\n});\n\n// Обработчик события \"mousemove\" (когда пользователь двигает шашку)\ndocument.addEventListener('mousemove', event => {\n  if (selectedChecker) {\n    selectedChecker.style.left = `${event.pageX - selectedChecker.offsetWidth / 2}px`;\n    selectedChecker.style.top = `${event.pageY - selectedChecker.offsetHeight / 2}px`;\n  }\n});\n\n// Обработчик события \"mouseup\" (когда пользователь отпускает мышь)\ndocument.addEventListener('mouseup', event => {\n  if (selectedChecker) {\n    // Вычисляем координаты ячейки, в которую перемещена шашка\n    const cell = getCellUnderChecker(event.pageX, event.pageY);\n    if (cell) {\n      moveCheckerToCell(cell);\n    }\n    // Убираем выделение и возвращаем шашку в начальное положение\n    selectedChecker.classList.remove('selected');\n    selectedChecker.style.zIndex = 1;\n    selectedChecker.style.left = '';\n    selectedChecker.style.top = '';\n    selectedChecker = null;\n  }\n});\n\n// Функция для получения ячейки, под которой находится шашка\nfunction getCellUnderChecker(x, y) {\n  // Можно использовать координаты и вычислить ячейку на основе сетки\n  const cells = document.querySelectorAll('.Board .Cell');\n  let targetCell = null;\n  cells.forEach(cell => {\n    const rect = cell.getBoundingClientRect();\n    if (x >= rect.left && x <= rect.right && y >= rect.top && y <= rect.bottom) {\n      targetCell = cell;\n    }\n  });\n  return targetCell;\n}\n\n// Функция для перемещения шашки в выбранную ячейку\nfunction moveCheckerToCell(cell) {\n  // Находим индекс выбранной ячейки\n  const gridArea = cell.style.gridArea;\n  selectedChecker.style.gridArea = gridArea; // Устанавливаем ячейку для шашки\n  cell.appendChild(selectedChecker); // Перемещаем шашку в ячейку\n}","map":{"version":3,"names":["checkers","document","querySelectorAll","selectedChecker","forEach","checker","addEventListener","event","target","classList","add","style","zIndex","left","pageX","offsetWidth","top","pageY","offsetHeight","cell","getCellUnderChecker","moveCheckerToCell","remove","x","y","cells","targetCell","rect","getBoundingClientRect","right","bottom","gridArea","appendChild"],"sources":["C:/Users/79650/Desktop/lolkekshahmati/src/DOM/Checkers/Game/Board/CheckerMove.js"],"sourcesContent":["    // Инициализация переменных\r\n    const checkers = document.querySelectorAll('.checker'); // Все шашки\r\n    let selectedChecker = null; // Шашка, которую выбрали для перемещения\r\n\r\n    // Обработчик события \"mousedown\" (когда пользователь кликает на шашку)\r\n    checkers.forEach((checker) => {\r\n    checker.addEventListener('mousedown', (event) => {\r\n        selectedChecker = event.target; // Устанавливаем выбранную шашку\r\n        selectedChecker.classList.add('selected'); // Подсвечиваем выбранную шашку\r\n        selectedChecker.style.zIndex = 1000; // Увеличиваем z-index для того, чтобы шашка была поверх других\r\n    });\r\n});\r\n\r\n    // Обработчик события \"mousemove\" (когда пользователь двигает шашку)\r\n    document.addEventListener('mousemove', (event) => {\r\n    if (selectedChecker) {\r\n    selectedChecker.style.left = `${event.pageX - selectedChecker.offsetWidth / 2}px`;\r\n    selectedChecker.style.top = `${event.pageY - selectedChecker.offsetHeight / 2}px`;\r\n}\r\n});\r\n\r\n    // Обработчик события \"mouseup\" (когда пользователь отпускает мышь)\r\n    document.addEventListener('mouseup', (event) => {\r\n    if (selectedChecker) {\r\n    // Вычисляем координаты ячейки, в которую перемещена шашка\r\n    const cell = getCellUnderChecker(event.pageX, event.pageY);\r\n    if (cell) {\r\n    moveCheckerToCell(cell);\r\n}\r\n    // Убираем выделение и возвращаем шашку в начальное положение\r\n    selectedChecker.classList.remove('selected');\r\n    selectedChecker.style.zIndex = 1;\r\n    selectedChecker.style.left = '';\r\n    selectedChecker.style.top = '';\r\n    selectedChecker = null;\r\n}\r\n});\r\n\r\n    // Функция для получения ячейки, под которой находится шашка\r\n    function getCellUnderChecker(x, y) {\r\n    // Можно использовать координаты и вычислить ячейку на основе сетки\r\n    const cells = document.querySelectorAll('.Board .Cell');\r\n    let targetCell = null;\r\n    cells.forEach(cell => {\r\n    const rect = cell.getBoundingClientRect();\r\n    if (\r\n    x >= rect.left && x <= rect.right &&\r\n    y >= rect.top && y <= rect.bottom\r\n    ) {\r\n    targetCell = cell;\r\n}\r\n});\r\n    return targetCell;\r\n}\r\n\r\n    // Функция для перемещения шашки в выбранную ячейку\r\n    function moveCheckerToCell(cell) {\r\n    // Находим индекс выбранной ячейки\r\n    const gridArea = cell.style.gridArea;\r\n    selectedChecker.style.gridArea = gridArea; // Устанавливаем ячейку для шашки\r\n    cell.appendChild(selectedChecker); // Перемещаем шашку в ячейку\r\n}\r\n"],"mappings":"AAAI;AACA,MAAMA,QAAQ,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,UAAU,CAAC,CAAC,CAAC;AACxD,IAAIC,eAAe,GAAG,IAAI,CAAC,CAAC;;AAE5B;AACAH,QAAQ,CAACI,OAAO,CAAEC,OAAO,IAAK;EAC9BA,OAAO,CAACC,gBAAgB,CAAC,WAAW,EAAGC,KAAK,IAAK;IAC7CJ,eAAe,GAAGI,KAAK,CAACC,MAAM,CAAC,CAAC;IAChCL,eAAe,CAACM,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3CP,eAAe,CAACQ,KAAK,CAACC,MAAM,GAAG,IAAI,CAAC,CAAC;EACzC,CAAC,CAAC;AACN,CAAC,CAAC;;AAEE;AACAX,QAAQ,CAACK,gBAAgB,CAAC,WAAW,EAAGC,KAAK,IAAK;EAClD,IAAIJ,eAAe,EAAE;IACrBA,eAAe,CAACQ,KAAK,CAACE,IAAI,GAAG,GAAGN,KAAK,CAACO,KAAK,GAAGX,eAAe,CAACY,WAAW,GAAG,CAAC,IAAI;IACjFZ,eAAe,CAACQ,KAAK,CAACK,GAAG,GAAG,GAAGT,KAAK,CAACU,KAAK,GAAGd,eAAe,CAACe,YAAY,GAAG,CAAC,IAAI;EACrF;AACA,CAAC,CAAC;;AAEE;AACAjB,QAAQ,CAACK,gBAAgB,CAAC,SAAS,EAAGC,KAAK,IAAK;EAChD,IAAIJ,eAAe,EAAE;IACrB;IACA,MAAMgB,IAAI,GAAGC,mBAAmB,CAACb,KAAK,CAACO,KAAK,EAAEP,KAAK,CAACU,KAAK,CAAC;IAC1D,IAAIE,IAAI,EAAE;MACVE,iBAAiB,CAACF,IAAI,CAAC;IAC3B;IACI;IACAhB,eAAe,CAACM,SAAS,CAACa,MAAM,CAAC,UAAU,CAAC;IAC5CnB,eAAe,CAACQ,KAAK,CAACC,MAAM,GAAG,CAAC;IAChCT,eAAe,CAACQ,KAAK,CAACE,IAAI,GAAG,EAAE;IAC/BV,eAAe,CAACQ,KAAK,CAACK,GAAG,GAAG,EAAE;IAC9Bb,eAAe,GAAG,IAAI;EAC1B;AACA,CAAC,CAAC;;AAEE;AACA,SAASiB,mBAAmBA,CAACG,CAAC,EAAEC,CAAC,EAAE;EACnC;EACA,MAAMC,KAAK,GAAGxB,QAAQ,CAACC,gBAAgB,CAAC,cAAc,CAAC;EACvD,IAAIwB,UAAU,GAAG,IAAI;EACrBD,KAAK,CAACrB,OAAO,CAACe,IAAI,IAAI;IACtB,MAAMQ,IAAI,GAAGR,IAAI,CAACS,qBAAqB,CAAC,CAAC;IACzC,IACAL,CAAC,IAAII,IAAI,CAACd,IAAI,IAAIU,CAAC,IAAII,IAAI,CAACE,KAAK,IACjCL,CAAC,IAAIG,IAAI,CAACX,GAAG,IAAIQ,CAAC,IAAIG,IAAI,CAACG,MAAM,EAC/B;MACFJ,UAAU,GAAGP,IAAI;IACrB;EACA,CAAC,CAAC;EACE,OAAOO,UAAU;AACrB;;AAEI;AACA,SAASL,iBAAiBA,CAACF,IAAI,EAAE;EACjC;EACA,MAAMY,QAAQ,GAAGZ,IAAI,CAACR,KAAK,CAACoB,QAAQ;EACpC5B,eAAe,CAACQ,KAAK,CAACoB,QAAQ,GAAGA,QAAQ,CAAC,CAAC;EAC3CZ,IAAI,CAACa,WAAW,CAAC7B,eAAe,CAAC,CAAC,CAAC;AACvC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}