{"ast":null,"code":"$(\".Cell\").on(\"click\", function () {\n  if (selectedChecker) {\n    const selectedCell = $(this);\n    const selectedPosition = selectedCell.css(\"grid-area\");\n    const checkerPosition = $(selectedChecker).css(\"grid-area\");\n    const selectedCoords = selectedPosition.trim().split(\" / \").map(Number);\n    const checkerCoords = checkerPosition.trim().split(\" / \").map(Number);\n    const selectedRow = selectedCoords[0];\n    const selectedCol = selectedCoords[1];\n    const checkerRow = checkerCoords[0];\n    const checkerCol = checkerCoords[1];\n    const rowDiff = Math.abs(selectedRow - checkerRow);\n    const colDiff = Math.abs(selectedCol - checkerCol);\n    console.log(`Selected position: ${selectedRow}, ${selectedCol}`);\n    console.log(`Checker position: ${checkerRow}, ${checkerCol}`);\n    console.log(`Row diff: ${rowDiff}, Col diff: ${colDiff}`);\n    if (rowDiff === 2 && colDiff === 2) {\n      const middleRow = (selectedRow + checkerRow) / 2;\n      const middleCol = (selectedCol + checkerCol) / 2;\n      console.log(`Middle position: ${middleRow}, ${middleCol}`);\n      const middleCell = $(\".Cell\").filter(function () {\n        const cellPosition = $(this).css(\"grid-area\").trim();\n        console.log(`Checking cell position: ${cellPosition}`);\n        return cellPosition === `${middleRow} / ${middleCol} / ${middleRow} / ${middleCol}`;\n      });\n      if (middleCell.length && middleCell.find(\".checker\").length) {\n        console.log(\"Middle cell contains checker\");\n        const middleChecker = middleCell.find(\".checker\");\n        const currentCheckerColor = $(selectedChecker).hasClass(\"black\") ? \"black\" : \"white\";\n        const middleCheckerColor = middleChecker.hasClass(\"black\") ? \"black\" : \"white\";\n        if (currentCheckerColor !== middleCheckerColor) {\n          middleChecker.remove();\n          $(selectedChecker).css(\"grid-area\", selectedPosition);\n          $(selectedChecker).removeClass(\"selected\");\n          selectedChecker = null;\n        }\n      } else {\n        console.log(\"No checker to jump over\");\n      }\n    } else if (rowDiff === 1 && colDiff === 1) {\n      $(selectedChecker).css(\"grid-area\", selectedPosition);\n      $(selectedChecker).removeClass(\"selected\");\n      selectedChecker = null;\n    }\n  }\n});","map":{"version":3,"names":["$","on","selectedChecker","selectedCell","selectedPosition","css","checkerPosition","selectedCoords","trim","split","map","Number","checkerCoords","selectedRow","selectedCol","checkerRow","checkerCol","rowDiff","Math","abs","colDiff","console","log","middleRow","middleCol","middleCell","filter","cellPosition","length","find","middleChecker","currentCheckerColor","hasClass","middleCheckerColor","remove","removeClass"],"sources":["C:/Users/79650/Desktop/lolkekshahmati/src/DOM/Checkers/Game/Board/CheckerMove.js"],"sourcesContent":["$(\".Cell\").on(\"click\", function () {\r\n    if (selectedChecker) {\r\n        const selectedCell = $(this);\r\n        const selectedPosition = selectedCell.css(\"grid-area\");\r\n        const checkerPosition = $(selectedChecker).css(\"grid-area\");\r\n\r\n        const selectedCoords = selectedPosition.trim().split(\" / \").map(Number);\r\n        const checkerCoords = checkerPosition.trim().split(\" / \").map(Number);\r\n\r\n        const selectedRow = selectedCoords[0];\r\n        const selectedCol = selectedCoords[1];\r\n        const checkerRow = checkerCoords[0];\r\n        const checkerCol = checkerCoords[1];\r\n\r\n        const rowDiff = Math.abs(selectedRow - checkerRow);\r\n        const colDiff = Math.abs(selectedCol - checkerCol);\r\n\r\n        console.log(`Selected position: ${selectedRow}, ${selectedCol}`);\r\n        console.log(`Checker position: ${checkerRow}, ${checkerCol}`);\r\n        console.log(`Row diff: ${rowDiff}, Col diff: ${colDiff}`);\r\n\r\n        if (rowDiff === 2 && colDiff === 2) {\r\n            const middleRow = (selectedRow + checkerRow) / 2;\r\n            const middleCol = (selectedCol + checkerCol) / 2;\r\n\r\n            console.log(`Middle position: ${middleRow}, ${middleCol}`);\r\n\r\n            const middleCell = $(\".Cell\").filter(function () {\r\n                const cellPosition = $(this).css(\"grid-area\").trim();\r\n                console.log(`Checking cell position: ${cellPosition}`);\r\n                return cellPosition === `${middleRow} / ${middleCol} / ${middleRow} / ${middleCol}`;\r\n            });\r\n\r\n            if (middleCell.length && middleCell.find(\".checker\").length) {\r\n                console.log(\"Middle cell contains checker\");\r\n                const middleChecker = middleCell.find(\".checker\");\r\n                const currentCheckerColor = $(selectedChecker).hasClass(\"black\") ? \"black\" : \"white\";\r\n                const middleCheckerColor = middleChecker.hasClass(\"black\") ? \"black\" : \"white\";\r\n\r\n                if (currentCheckerColor !== middleCheckerColor) {\r\n                    middleChecker.remove();\r\n                    $(selectedChecker).css(\"grid-area\", selectedPosition);\r\n                    $(selectedChecker).removeClass(\"selected\");\r\n                    selectedChecker = null;\r\n                }\r\n            } else {\r\n                console.log(\"No checker to jump over\");\r\n            }\r\n        } else if (rowDiff === 1 && colDiff === 1) {\r\n            $(selectedChecker).css(\"grid-area\", selectedPosition);\r\n            $(selectedChecker).removeClass(\"selected\");\r\n            selectedChecker = null;\r\n        }\r\n    }\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}