{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79650\\\\Desktop\\\\lolkekshahmati\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport Checkers from \"./DOM/Checkers\";\nimport reportWebVitals from './reportWebVitals';\nimport GameModel from \"./GameModel/GameModel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst gameModel = new GameModel();\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Checkers, {\n    GameModel: gameModel\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 5\n}, this));\nfunction closestPolyfill(el, selector) {\n  while (el) {\n    if (el.matches(selector)) return el;\n    el = el.parentElement;\n  }\n  return null;\n}\nif (!Element.prototype.closest) {\n  Element.prototype.closest = function (selector) {\n    let el = this;\n    while (el) {\n      if (el.matches(selector)) return el;\n      el = el.parentElement;\n    }\n    return null;\n  };\n}\ndocument.addEventListener('DOMContentLoaded', () => {\n  const board = document.querySelector('.Board');\n  if (board) {\n    board.addEventListener('click', event => {\n      // Полифилл closest\n      const element = closestPolyfill(event.target, 'div');\n      if (element) {\n        const computedStyle = window.getComputedStyle(element);\n        const gridArea = computedStyle.gridArea;\n        const rowStart = computedStyle.gridRowStart;\n        const columnStart = computedStyle.gridColumnStart;\n        if (gridArea !== 'none') {\n          console.log(`Grid Area: ${gridArea}`);\n        }\n        if (rowStart !== 'auto' && columnStart !== 'auto') {\n          console.log(`Row: ${rowStart}, Column: ${columnStart}`);\n        }\n      }\n    });\n  }\n});\n\n// Используем полифилл вместо `closest`\nconst element = closestPolyfill(event.target, 'div');\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","Checkers","reportWebVitals","GameModel","jsxDEV","_jsxDEV","gameModel","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","closestPolyfill","el","selector","matches","parentElement","Element","prototype","closest","addEventListener","board","querySelector","event","element","target","computedStyle","window","getComputedStyle","gridArea","rowStart","gridRowStart","columnStart","gridColumnStart","console","log"],"sources":["C:/Users/79650/Desktop/lolkekshahmati/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport Checkers from \"./DOM/Checkers\";\nimport reportWebVitals from './reportWebVitals';\nimport GameModel from \"./GameModel/GameModel\";\n\nconst gameModel = new GameModel();\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <React.StrictMode>\n        <Checkers GameModel={gameModel} />\n    </React.StrictMode>\n);\n\nfunction closestPolyfill(el, selector) {\n    while (el) {\n        if (el.matches(selector)) return el;\n        el = el.parentElement;\n    }\n    return null;\n}\n\nif (!Element.prototype.closest) {\n    Element.prototype.closest = function(selector) {\n        let el = this;\n        while (el) {\n            if (el.matches(selector)) return el;\n            el = el.parentElement;\n        }\n        return null;\n    };\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const board = document.querySelector('.Board');\n    if (board) {\n        board.addEventListener('click', (event) => {\n            // Полифилл closest\n            const element = closestPolyfill(event.target, 'div');\n            if (element) {\n                const computedStyle = window.getComputedStyle(element);\n                const gridArea = computedStyle.gridArea;\n                const rowStart = computedStyle.gridRowStart;\n                const columnStart = computedStyle.gridColumnStart;\n\n                if (gridArea !== 'none') {\n                    console.log(`Grid Area: ${gridArea}`);\n                }\n                if (rowStart !== 'auto' && columnStart !== 'auto') {\n                    console.log(`Row: ${rowStart}, Column: ${columnStart}`);\n                }\n            }\n        });\n    }\n});\n\n\n// Используем полифилл вместо `closest`\nconst element = closestPolyfill(event.target, 'div');\n\n\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,SAAS,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,SAAS,GAAG,IAAIH,SAAS,CAAC,CAAC;AAEjC,MAAMI,IAAI,GAAGP,QAAQ,CAACQ,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,cACPN,OAAA,CAACN,KAAK,CAACa,UAAU;EAAAC,QAAA,eACbR,OAAA,CAACJ,QAAQ;IAACE,SAAS,EAAEG;EAAU;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACpB,CACtB,CAAC;AAED,SAASC,eAAeA,CAACC,EAAE,EAAEC,QAAQ,EAAE;EACnC,OAAOD,EAAE,EAAE;IACP,IAAIA,EAAE,CAACE,OAAO,CAACD,QAAQ,CAAC,EAAE,OAAOD,EAAE;IACnCA,EAAE,GAAGA,EAAE,CAACG,aAAa;EACzB;EACA,OAAO,IAAI;AACf;AAEA,IAAI,CAACC,OAAO,CAACC,SAAS,CAACC,OAAO,EAAE;EAC5BF,OAAO,CAACC,SAAS,CAACC,OAAO,GAAG,UAASL,QAAQ,EAAE;IAC3C,IAAID,EAAE,GAAG,IAAI;IACb,OAAOA,EAAE,EAAE;MACP,IAAIA,EAAE,CAACE,OAAO,CAACD,QAAQ,CAAC,EAAE,OAAOD,EAAE;MACnCA,EAAE,GAAGA,EAAE,CAACG,aAAa;IACzB;IACA,OAAO,IAAI;EACf,CAAC;AACL;AAEAb,QAAQ,CAACiB,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;EAChD,MAAMC,KAAK,GAAGlB,QAAQ,CAACmB,aAAa,CAAC,QAAQ,CAAC;EAC9C,IAAID,KAAK,EAAE;IACPA,KAAK,CAACD,gBAAgB,CAAC,OAAO,EAAGG,KAAK,IAAK;MACvC;MACA,MAAMC,OAAO,GAAGZ,eAAe,CAACW,KAAK,CAACE,MAAM,EAAE,KAAK,CAAC;MACpD,IAAID,OAAO,EAAE;QACT,MAAME,aAAa,GAAGC,MAAM,CAACC,gBAAgB,CAACJ,OAAO,CAAC;QACtD,MAAMK,QAAQ,GAAGH,aAAa,CAACG,QAAQ;QACvC,MAAMC,QAAQ,GAAGJ,aAAa,CAACK,YAAY;QAC3C,MAAMC,WAAW,GAAGN,aAAa,CAACO,eAAe;QAEjD,IAAIJ,QAAQ,KAAK,MAAM,EAAE;UACrBK,OAAO,CAACC,GAAG,CAAC,cAAcN,QAAQ,EAAE,CAAC;QACzC;QACA,IAAIC,QAAQ,KAAK,MAAM,IAAIE,WAAW,KAAK,MAAM,EAAE;UAC/CE,OAAO,CAACC,GAAG,CAAC,QAAQL,QAAQ,aAAaE,WAAW,EAAE,CAAC;QAC3D;MACJ;IACJ,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;;AAGF;AACA,MAAMR,OAAO,GAAGZ,eAAe,CAACW,KAAK,CAACE,MAAM,EAAE,KAAK,CAAC;AAGpD7B,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}