{"ast":null,"code":"$(document).ready(function () {\n  let selectedChecker = null;\n  $(\".checker\").on(\"click\", function () {\n    // Если шашка уже выбрана, то отменяем выбор\n    if (selectedChecker === this) {\n      selectedChecker = null;\n      $(this).removeClass(\"selected\");\n    } else {\n      // Если шашка не выбрана, то выбираем ее\n      if (selectedChecker) {\n        $(selectedChecker).removeClass(\"selected\");\n      }\n      selectedChecker = this;\n      $(this).addClass(\"selected\");\n    }\n  });\n  $(\".Cell\").on(\"click\", function () {\n    if (selectedChecker) {\n      const selectedCell = $(this);\n\n      // Получаем положение выбранной клетки\n      const selectedPosition = selectedCell.css(\"grid-area\");\n      const checkerPosition = $(selectedChecker).css(\"grid-area\");\n\n      // Получаем координаты шашки (клетки)\n      const selectedRow = parseInt(selectedPosition.split(' / ')[0]);\n      const selectedCol = parseInt(selectedPosition.split(' / ')[1]);\n\n      // Получаем координаты текущей клетки шашки\n      const checkerRow = parseInt(checkerPosition.split(' / ')[0]);\n      const checkerCol = parseInt(checkerPosition.split(' / ')[1]);\n\n      // Проверка, является ли клик перепрыгиванием\n      const rowDiff = Math.abs(selectedRow - checkerRow);\n      const colDiff = Math.abs(selectedCol - checkerCol);\n      if (rowDiff === 2 && colDiff === 2) {\n        // Проверяем, что перепрыгиваемая клетка занята противником\n        const middleRow = (selectedRow + checkerRow) / 2;\n        const middleCol = (selectedCol + checkerCol) / 2;\n        const middleCell = $(\".Cell\").filter(function () {\n          return $(this).css(\"grid-area\") === `${middleRow} / ${middleCol} / ${middleRow} / ${middleCol}`;\n        });\n        if (middleCell.length && middleCell.find(\".checker\").length) {\n          // Добавляем класс kill для перепрыгнутой шашки\n          middleCell.find(\".checker\").addClass(\"kill\");\n\n          // Перемещаем шашку на новую клетку\n          $(selectedChecker).css(\"grid-area\", selectedCell.css(\"grid-area\"));\n\n          // Убираем выделение\n          $(selectedChecker).removeClass(\"selected\");\n          selectedChecker = null;\n        }\n      } else if (rowDiff === 1 && colDiff === 1) {\n        // Если движение не перепрыгивание, просто перемещаем шашку\n        $(selectedChecker).css(\"grid-area\", selectedCell.css(\"grid-area\"));\n\n        // Убираем выделение\n        $(selectedChecker).removeClass(\"selected\");\n        selectedChecker = null;\n      }\n    }\n  });\n});","map":{"version":3,"names":["$","document","ready","selectedChecker","on","removeClass","addClass","selectedCell","selectedPosition","css","checkerPosition","selectedRow","parseInt","split","selectedCol","checkerRow","checkerCol","rowDiff","Math","abs","colDiff","middleRow","middleCol","middleCell","filter","length","find"],"sources":["C:/Users/79650/Desktop/lolkekshahmati/src/DOM/Checkers/Game/Board/CheckerMove.js"],"sourcesContent":["$(document).ready(function() {\r\n    let selectedChecker = null;\r\n\r\n    $(\".checker\").on(\"click\", function() {\r\n        // Если шашка уже выбрана, то отменяем выбор\r\n        if (selectedChecker === this) {\r\n            selectedChecker = null;\r\n            $(this).removeClass(\"selected\");\r\n        } else {\r\n            // Если шашка не выбрана, то выбираем ее\r\n            if (selectedChecker) {\r\n                $(selectedChecker).removeClass(\"selected\");\r\n            }\r\n            selectedChecker = this;\r\n            $(this).addClass(\"selected\");\r\n        }\r\n    });\r\n\r\n    $(\".Cell\").on(\"click\", function() {\r\n        if (selectedChecker) {\r\n            const selectedCell = $(this);\r\n\r\n            // Получаем положение выбранной клетки\r\n            const selectedPosition = selectedCell.css(\"grid-area\");\r\n            const checkerPosition = $(selectedChecker).css(\"grid-area\");\r\n\r\n            // Получаем координаты шашки (клетки)\r\n            const selectedRow = parseInt(selectedPosition.split(' / ')[0]);\r\n            const selectedCol = parseInt(selectedPosition.split(' / ')[1]);\r\n\r\n            // Получаем координаты текущей клетки шашки\r\n            const checkerRow = parseInt(checkerPosition.split(' / ')[0]);\r\n            const checkerCol = parseInt(checkerPosition.split(' / ')[1]);\r\n\r\n            // Проверка, является ли клик перепрыгиванием\r\n            const rowDiff = Math.abs(selectedRow - checkerRow);\r\n            const colDiff = Math.abs(selectedCol - checkerCol);\r\n\r\n            if (rowDiff === 2 && colDiff === 2) {\r\n                // Проверяем, что перепрыгиваемая клетка занята противником\r\n                const middleRow = (selectedRow + checkerRow) / 2;\r\n                const middleCol = (selectedCol + checkerCol) / 2;\r\n\r\n                const middleCell = $(\".Cell\").filter(function() {\r\n                    return $(this).css(\"grid-area\") === `${middleRow} / ${middleCol} / ${middleRow} / ${middleCol}`;\r\n                });\r\n\r\n                if (middleCell.length && middleCell.find(\".checker\").length) {\r\n                    // Добавляем класс kill для перепрыгнутой шашки\r\n                    middleCell.find(\".checker\").addClass(\"kill\");\r\n\r\n                    // Перемещаем шашку на новую клетку\r\n                    $(selectedChecker).css(\"grid-area\", selectedCell.css(\"grid-area\"));\r\n\r\n                    // Убираем выделение\r\n                    $(selectedChecker).removeClass(\"selected\");\r\n                    selectedChecker = null;\r\n                }\r\n            } else if (rowDiff === 1 && colDiff === 1) {\r\n                // Если движение не перепрыгивание, просто перемещаем шашку\r\n                $(selectedChecker).css(\"grid-area\", selectedCell.css(\"grid-area\"));\r\n\r\n                // Убираем выделение\r\n                $(selectedChecker).removeClass(\"selected\");\r\n                selectedChecker = null;\r\n            }\r\n        }\r\n    });\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}